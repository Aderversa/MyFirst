void merge(int arr[], int l, int mid, int r)
{
	int p1 = l, p2 = mid + 1;
	int* newarr = calloc(r - l + 1, sizeof(int));
	assert(newarr != NULL);
	int i = 0;
	while (p1 <= mid && p2 <= r)
	{
		if (arr[p1] <= arr[p2])
			newarr[i++] = arr[p1++];
		else if (arr[p1] > arr[p2])
			newarr[i++] = arr[p2++];
	}
	while (p1 <= mid)
		newarr[i++] = arr[p1++];
	while (p2 <= r)
		newarr[i++] = arr[p2++];
	for (i = 0; i < r - l + 1; i++)
	{
		arr[l + i] = newarr[i];
	}
}

void sort(int arr[], int l, int r)
{
	if (l == r)
		return;
	int mid = l + ((r - l) >> 1);
	sort(arr, l, mid);
	sort(arr, mid + 1, r);
	merge(arr, l, mid, r);
}
